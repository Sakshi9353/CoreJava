APTITUDE TEST

1.(b)
2.(a)
3.(c)
4.(b)
5.(d)
6.(c)
7.(a)
8.(d)
9.(a)
10.(b)
11.(a)
12.(b)
13.(d)
14.(c)


Theory questions

1.Constructor is a block of code when it is called object is created.
   ->it helps to initialize the objects
   ->Constructor is having some rules to write the code
		*Name should be same as Class name
		*No explicit functions
		*it not having static and final
   ->In the constructor we use this keyword
   
2.Constructor is having two types
   *Parameterized constructor
   *Default constructor
   
   *Parameterized constructor
    ->It is the type of constructor which is having parameters
	->In this, we intialize the values
	
   *Default constructor
    ->it is the type of constructor which does not have the any parameters
	->when we does not have parameters then it creates the default parameters
	->int values returns default (0)
	->string returns (null)
	
3.Object is having the states and Behaviours
  ->States are nothing but Properties
  ->Behaviours are nothing but actions
    Syntax:
	       classname obj = new Classname();
    Example:
	       Student stu = new Student;
		   
    Another Example:
	       take example as laptop;
		   states are:
		        *brand
				*price
				*model
				*name
				*speed etc
		   Behaviours are:
		        *driving
				*reverse
				*storing
				*Travelling etc
				
4. Class is the blue print of the object
   ->Inside the class we have
          *methods
          *subclass
          *feilds
          *constructor
   ->every thing is written inside the class
   ->class name should be start with capital letter
   ->

5. Method overloading
   ->meathod overloading is having same meathod name but different parameters
   ->it is having 3 ways
       *number of arguments
	   *changing datatype
	   *value of parameters
	   
	Example:
	public class Calculation{
	
	public static void main(String[] args){
	add(2,4);
	add(4,7.8)
	}
	public class void add(int a,int b,int c){
	
	c=a+b;
	return c;
	}
	public class int add(int a,float b, float c){
	
	c=a+b;
	return c;
	}
	
	}
   
8. String 
   ->String is the sequence of characters
   ->It is having many Methods
   There are two ways to create String object:

      *By string literal
      *By new keyword
      1) String Literal
           Java String literal is created by using double quotes. For Example:

           String s="welcome";  
            Each time you create a string literal, the JVM checks the "string constant pool" first. 
			If the string already exists in the pool, a reference to the pooled instance is returned.
			If the string doesn't exist in the pool, a new string instance is created and placed in the pool. 
			For example:

               String s1="Welcome";  
               String s2="Welcome"; 
			   
       2)New  Keyword
	   ->we create the string by using new keyword
                String s=new String("Welcome"); 
          ->JVM will create a new string object in normal (non-pool) heap memory, and the literal "Welcome" will be placed in the string constant pool. 
		  The variable s will refer to the object in a heap (non-pool).

		public class StringExample{    
		public static void main(String args[]){    
		String s1="java";   
		char ch[]={'s','t','r','i','n','g','s'};    
		String s2=new String(ch);
		String s3=new String("example");
		System.out.println(s1);    
		System.out.println(s2);    
		System.out.println(s3);    
		}}    
   
9. Methods of String class
   *String concate
   *string copy
   *string equals
   *string toUpperCase
   *String toLowerCase
   
10. String is Immutable because it will not change.

Programming Quetions

1.public class Table{
    String material="wooden";
	int price=3000;
	String shape="square";
	String size="big";
	
	public Table(String material, int price, string shape, String size){
	 this.material = material;
	 this.price = price;
	 this.shape = shape;
	 this.size = size;
	}
	
	public static void main(String[] args){
	  Table table = new Table();
	  System.out.println(table.material);
	  System.out.println(table.price);
	  System.out.println(table.shape);
	  System.out.println(table.size);
	}
	
	}



2.public class Car{
    String brand;
	int price;
	String name;
	int speed;
	
	public Car(String brand, int price, string name, int speed){
	 this.brand = brand;
	 this.price = price;
	 this.name = name;
	 this.speed = speed;
	}
	
	public static void main(String[] args){
	  Car car = new Car("Mahindra",1500000, "Motor",60 );
	  System.out.println(car.brand);
	  System.out.println(car.price);
	  System.out.println(car.name);
	  System.out.println(car.speed);
	}
	
	}

3.public class Fish{  
  String name="shark";
  int limit = 1;
  String color="gray";
  
  public Fish(String name,int limit,String color){
  this.name= name;
  this.limit = limit;
  this.color = color;
  }
  public static void main(String[] args){
  
  Fish fish = new Fish();
  System.out.println(fish.name);
  System.out.println(fish.limit);
  System.out.println(fish.color);
  
  }
}


public class Camera{  
  String name="canon";
  int guarantee = 1;
  String color="black";
  
  public Camera(String name,int guarantee,String color){
  this.name= name;
  this.guarantee = guarantee;
  this.color = color;
  }
  public static void main(String[] args){
  
  Camera camera = new Camera();
  System.out.println(camera.name);
  System.out.println(camera.guarantee);
  System.out.println(camera.color);
  
  }
}


public class Headphones{  
  String name="samsung";
  int price = 1000;
  String color="white";
  
  public Headphones(String name,int price,String color){
  this.name= name;
  this.price = price;
  this.color = color;
  }
  public static void main(String[] args){
  
  Headphones headphones = new Headphones();
  System.out.println(headphones.name);
  System.out.println(headphones.price);
  System.out.println(headphones.color);
  
  }
}

4.public class Alphabet{
 
public static void main(String[] args){
 Char vowels = {'a','e','i','o','u'};
 system.out.println("vowels");
 for(i=0;i<vowels.lenght();i--)
 {
 System.out.println(vowels[i])
 }
 }
 }


















